import sys
import webbrowser
import pymysql
import os
from PyQt6.QtWidgets import QApplication, QMainWindow, QTableWidgetItem, QDialog, QVBoxLayout, QLabel, QLineEdit, QPushButton, QMessageBox
from trangchu import Ui_MainWindow  # Import giao di·ªán
from database import Database,connect_db  # H√†m k·∫øt n·ªëi MySQL


class EditDialog(QDialog):
    """H·ªôp tho·∫°i ch·ªânh s·ª≠a s·∫£n ph·∫©m"""
    def __init__(self, parent, row):
        super().__init__(parent)
        self.setWindowTitle("Ch·ªânh s·ª≠a s·∫£n ph·∫©m")
        self.setFixedSize(300, 200)

        self.row = row
        self.parent = parent
        self.table = parent.ui.tableWidget  # L·∫•y b·∫£ng t·ª´ c·ª≠a s·ªï ch√≠nh

        # L·∫•y gi√° tr·ªã hi·ªán t·∫°i t·ª´ b·∫£ng
        self.current_quantity = self.table.item(row, 2).text() if self.table.item(row, 2) else "1"
        self.current_price = self.table.item(row, 3).text() if self.table.item(row, 3) else "0"

        # T·∫°o giao di·ªán h·ªôp tho·∫°i ch·ªânh s·ª≠a
        layout = QVBoxLayout()

        self.label_quantity = QLabel("S·ªë l∆∞·ª£ng:")
        self.input_quantity = QLineEdit(self.current_quantity)

        self.label_price = QLabel("ƒê∆°n gi√°:")
        self.input_price = QLineEdit(self.current_price)

        self.save_button = QPushButton("L∆∞u")
        self.save_button.clicked.connect(self.save_changes)

        layout.addWidget(self.label_quantity)
        layout.addWidget(self.input_quantity)
        layout.addWidget(self.label_price)
        layout.addWidget(self.input_price)
        layout.addWidget(self.save_button)

        self.setLayout(layout)

    def save_changes(self):
        """L∆∞u th√¥ng tin ch·ªânh s·ª≠a v√†o b·∫£ng"""
        new_quantity = self.input_quantity.text()
        new_price = self.input_price.text()

        if new_quantity.isdigit() and new_price.replace(".", "", 1).isdigit():
            new_quantity = int(new_quantity)
            new_price = float(new_price)
            new_total = new_quantity * new_price  # T√≠nh l·∫°i th√†nh ti·ªÅn

            # C·∫≠p nh·∫≠t b·∫£ng
            self.table.setItem(self.row, 2, QTableWidgetItem(str(new_quantity)))  # C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
            self.table.setItem(self.row, 3, QTableWidgetItem(str(new_price)))  # C·∫≠p nh·∫≠t ƒë∆°n gi√°
            self.table.setItem(self.row, 4, QTableWidgetItem(str(new_total)))  # C·∫≠p nh·∫≠t th√†nh ti·ªÅn

            # Ki·ªÉm tra n·∫øu parent c√≥ h√†m `tinh_tong_thanh_tien`, g·ªçi n√≥ ƒë·ªÉ c·∫≠p nh·∫≠t t·ªïng ti·ªÅn
            if hasattr(self.parent, 'tinh_tong_thanh_tien'):
                self.parent.tinh_tong_thanh_tien()

            self.accept()  # ƒê√≥ng h·ªôp tho·∫°i
        else:
            print("‚ùå Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá!")  # C√≥ th·ªÉ thay b·∫±ng QMessageBox ƒë·ªÉ c·∫£nh b√°o

class TrangChu(QMainWindow):
    def __init__(self):
        super().__init__()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)
        
        # K·∫øt n·ªëi CSDL
        self.conn = connect_db()
        if self.conn:
            print("‚úÖ K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu th√†nh c√¥ng!")
            self.load_order_details()
        else:
            print("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi CSDL!")
            
        # Danh s√°ch l∆∞u tr·ªØ nhi·ªÅu h√≥a ƒë∆°n
        self.all_orders = []  # L∆∞u t·∫•t c·∫£ h√≥a ƒë∆°n
        self.current_index = -1  # V·ªã tr√≠ c·ªßa h√≥a ƒë∆°n ƒëang xem
        self.current_invoice_number = 1  # üîπ Kh·ªüi t·∫°o s·ªë h√≥a ƒë∆°n


        # K·∫øt n·ªëi c√°c n√∫t ch·ª©c nƒÉng
        self.ui.pushButton_10.clicked.connect(self.dang_xuat)  # ƒêƒÉng xu·∫•t
        self.ui.pushButton_15.clicked.connect(self.them_hoa_don)  # Th√™m h√≥a ƒë∆°n m·ªõi
        self.ui.pushButton_12.clicked.connect(self.lui_hoa_don)  # L√πi <<
        self.ui.pushButton_16.clicked.connect(self.tien_hoa_don)  # Ti·∫øn >>
        self.ui.pushButton_13.clicked.connect(self.xoa_san_pham)  # X√≥a s·∫£n ph·∫©m trong h√≥a ƒë∆°n
        self.ui.pushButton_14.clicked.connect(self.sua_san_pham)  # S·ª≠a s·∫£n ph·∫©m trong h√≥a ƒë∆°n
        self.ui.pushButton_17.clicked.connect(self.in_hoa_don)  # In h√≥a ƒë∆°n
        self.ui.pushButton_18.clicked.connect(self.luu_hoa_don_csdl)  # N√∫t "L∆∞u h√≥a ƒë∆°n"
        self.ui.pushButton_20.clicked.connect(self.thanh_toan)  # Thanh to√°n
        self.ui.lineEdit_3.returnPressed.connect(self.hien_thi_ma_don_hang)  # Nh·∫•n Enter ƒë·ªÉ t√¨m m√£ ƒë∆°n h√†ng
        self.ui.pushButton_9.clicked.connect(self.ap_dung_khuyen_mai)
        

        # G√°n s·ª± ki·ªán click cho c√°c n√∫t s·∫£n ph·∫©m
        self.pushButton4 = QPushButton("Special Tea")
        self.pushButton5 = QPushButton("Coffee")
        self.pushButton2 = QPushButton("B√°nh")
        self.pushButton6 = QPushButton("Topping")
        
        self.ui.product_buttons = [
            (self.ui.pushButton_37, "PhinDi Cassia", 55000),
            (self.ui.pushButton_38, "PhinDi H·∫°nh Nh√¢n", 45000),
            (self.ui.pushButton_24, "PhinDi Choco", 45000),
            (self.ui.pushButton_26, "PhinDi Kem S·ªØa", 45000),
            (self.ui.pushButton_36, "Classic Phin Freeze", 55000),
            (self.ui.pushButton_35, "Freeze S√¥-c√¥-la", 55000),
            (self.ui.pushButton_34, "Freeze Tr√† Xanh", 55000),
            (self.ui.pushButton_33, "Latte", 99000),
        ]

        for button, name, price in self.ui.product_buttons:
            button.clicked.connect(lambda _, n=name, p=price: self.chon_san_pham(n, p))

    def load_order_details(self):
        """L·∫•y d·ªØ li·ªáu t·ª´ b·∫£ng order_details v√† hi·ªÉn th·ªã l√™n tableWidget."""
        try:
            cursor = self.conn.cursor()
            query = "SELECT order_id, product_id, quantity, price, total FROM order_details"
            cursor.execute(query)
            rows = cursor.fetchall()

            self.ui.tableWidget.setRowCount(len(rows))
            self.ui.tableWidget.setColumnCount(5)
            self.ui.tableWidget.setHorizontalHeaderLabels(["M√£ SP", "T√™n s·∫£n ph·∫©m", "S·ªë l∆∞·ª£ng", "ƒê∆°n gi√°", "Th√†nh ti·ªÅn"])

            for row_index, row_data in enumerate(rows):
                for col_index, col_value in enumerate(row_data):
                    item = QTableWidgetItem(str(col_value))
                    self.ui.tableWidget.setItem(row_index, col_index, item)

            cursor.close()
            self.tinh_tong_thanh_tien()
        except pymysql.Error as e:
            print(f"‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu: {e}")

    def chon_san_pham(self, ten_san_pham, don_gia):
        """Th√™m s·∫£n ph·∫©m v√†o b·∫£ng."""
        table = self.ui.tableWidget
        row_count = table.rowCount()

        for row in range(row_count):
            if table.item(row, 1) and table.item(row, 1).text() == ten_san_pham:
                so_luong = int(table.item(row, 2).text()) + 1
                thanh_tien = so_luong * don_gia
                table.setItem(row, 2, QTableWidgetItem(str(so_luong)))
                table.setItem(row, 4, QTableWidgetItem(str(thanh_tien)))
                self.tinh_tong_thanh_tien()
                return

        table.insertRow(row_count)
        table.setItem(row_count, 0, QTableWidgetItem(str(row_count + 1)))
        table.setItem(row_count, 1, QTableWidgetItem(ten_san_pham))
        table.setItem(row_count, 2, QTableWidgetItem("1"))
        table.setItem(row_count, 3, QTableWidgetItem(str(don_gia)))
        table.setItem(row_count, 4, QTableWidgetItem(str(don_gia)))

        self.tinh_tong_thanh_tien()

    def tinh_tong_thanh_tien(self):
        """T√≠nh t·ªïng th√†nh ti·ªÅn."""
        total_amount = 0
        for row in range(self.ui.tableWidget.rowCount()):
            item = self.ui.tableWidget.item(row, 4)
            if item and item.text():
                total_amount += float(item.text())

        self.ui.lineEdit_7.setText(str(total_amount))

    def them_hoa_don(self):
        """Th√™m h√≥a ƒë∆°n m·ªõi m√† kh√¥ng m·∫•t d·ªØ li·ªáu c≈©."""
        self.luu_hoa_don_hien_tai()
        self.ui.tableWidget.setRowCount(0)
        self.current_index = len(self.all_orders)  # Chuy·ªÉn sang h√≥a ƒë∆°n m·ªõi

    def lui_hoa_don(self):
        """Quay l·∫°i h√≥a ƒë∆°n tr∆∞·ªõc ƒë√≥."""
        if self.current_index > 0:
            self.current_index -= 1
            self.khoi_phuc_hoa_don(self.current_index)

    def tien_hoa_don(self):
        """Ti·∫øn t·ªõi h√≥a ƒë∆°n ti·∫øp theo."""
        if self.current_index < len(self.all_orders) - 1:
            self.current_index += 1
            self.khoi_phuc_hoa_don(self.current_index)

    def luu_hoa_don_hien_tai(self):
        """L∆∞u l·∫°i h√≥a ƒë∆°n hi·ªán t·∫°i v√†o danh s√°ch."""
        hoa_don = []
        for row in range(self.ui.tableWidget.rowCount()):
            row_data = []
            for col in range(self.ui.tableWidget.columnCount()):
                item = self.ui.tableWidget.item(row, col)
                row_data.append(item.text() if item else "")
            hoa_don.append(row_data)

        self.all_orders.append(hoa_don)

    def khoi_phuc_hoa_don(self, index):
        """Kh√¥i ph·ª•c h√≥a ƒë∆°n t·ª´ danh s√°ch."""
        self.ui.tableWidget.setRowCount(len(self.all_orders[index]))
        for row_idx, row_data in enumerate(self.all_orders[index]):
            for col_idx, col_value in enumerate(row_data):
                self.ui.tableWidget.setItem(row_idx, col_idx, QTableWidgetItem(col_value))
        self.tinh_tong_thanh_tien()

    def xoa_san_pham(self):
        """X√≥a d√≤ng ƒëang ch·ªçn."""
        selected_row = self.ui.tableWidget.currentRow()
        if selected_row >= 0:
            self.ui.tableWidget.removeRow(selected_row)
            self.tinh_tong_thanh_tien()

    def sua_san_pham(self):
        """M·ªü h·ªôp tho·∫°i ch·ªânh s·ª≠a s·∫£n ph·∫©m"""
        selected_row = self.ui.tableWidget.currentRow()
        if selected_row >= 0:
            dialog = EditDialog(self, selected_row)  # ‚úÖ Truy·ªÅn self ƒë·ªÉ EditDialog bi·∫øt parent l√† TrangChu
            dialog.exec()  # ‚úÖ Hi·ªÉn th·ªã h·ªôp tho·∫°i modal
        else:
            print("‚ùå Vui l√≤ng ch·ªçn m·ªôt s·∫£n ph·∫©m ƒë·ªÉ s·ª≠a!")
            
    def in_hoa_don(self):
        """In h√≥a ƒë∆°n v√† l∆∞u l·∫°i nhi·ªÅu h√≥a ƒë∆°n"""
        danh_sach_san_pham = []
        for row in range(self.ui.tableWidget.rowCount()):
            ma_sp = self.ui.tableWidget.item(row, 0).text()
            ten_sp = self.ui.tableWidget.item(row, 1).text()
            so_luong = self.ui.tableWidget.item(row, 2).text()
            don_gia = self.ui.tableWidget.item(row, 3).text()
            thanh_tien = self.ui.tableWidget.item(row, 4).text()
            danh_sach_san_pham.append({
                "ma_sp": ma_sp,
                "ten_sp": ten_sp,
                "so_luong": so_luong,
                "don_gia": don_gia,
                "thanh_tien": thanh_tien
            })
        
        tong_tien = sum(float(sp["thanh_tien"]) for sp in danh_sach_san_pham)
        
        danh_sach_html = "".join(
            f"""
            <tr>
                <td>{sp['ma_sp']}</td>
                <td>{sp['ten_sp']}</td>
                <td>{sp['so_luong']}</td>
                <td>{sp['don_gia']}</td>
                <td>{sp['thanh_tien']}</td>
            </tr>
            """ for sp in danh_sach_san_pham
        )
        
        file_name = f"hoadon_{self.current_invoice_number}.html"
        with open(file_name, "w", encoding="utf-8") as file:
            file.write(f"""
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <title>H√≥a ƒê∆°n Thanh To√°n #{self.current_invoice_number}</title>
    <style>
        body {{ font-family: Arial, sans-serif; max-width: 400px; margin: auto; }}
        h2 {{ text-align: center; color: #333; }}
        table {{ width: 100%; border-collapse: collapse; }}
        th, td {{ border: 1px solid #ddd; padding: 10px; text-align: center; }}
        th {{ background-color: #007bff; color: white; }}
        .total {{ text-align: right; font-weight: bold; }}
    </style>
</head>
<body>
    <h2>H√ìA ƒê∆†N #{self.current_invoice_number}</h2>
    <table>
        <tr><th>M√£ SP</th><th>T√™n SP</th><th>S·ªë l∆∞·ª£ng</th><th>ƒê∆°n gi√°</th><th>Th√†nh ti·ªÅn</th></tr>
        {danh_sach_html}
    </table>
    <p class="total">T·ªïng c·ªông: {tong_tien} VND</p>
    <p style="text-align: center;">C·∫£m ∆°n qu√Ω kh√°ch! üòä</p>
</body>
</html>
""")
        
        self.current_invoice_number += 1  # TƒÉng s·ªë h√≥a ƒë∆°n ƒë·ªÉ l∆∞u ti·∫øp t·ª•c

        QMessageBox.information(self, "Th√†nh c√¥ng", f"H√≥a ƒë∆°n {self.current_invoice_number - 1} ƒë√£ ƒë∆∞·ª£c l∆∞u!")
        webbrowser.open(f"file://{os.path.abspath(file_name)}")


        
    def luu_hoa_don_csdl(self):
        """L∆∞u h√≥a ƒë∆°n hi·ªán t·∫°i v√†o CSDL"""

        # Ki·ªÉm tra k·∫øt n·ªëi CSDL tr∆∞·ªõc khi th·ª±c hi·ªán thao t√°c
        if not self.conn or not self.conn.open:
            QMessageBox.critical(self, "L·ªói CSDL", "‚ùå K·∫øt n·ªëi CSDL kh√¥ng kh·∫£ d·ª•ng!")
            return
        else:
            print("‚úÖ K·∫øt n·ªëi CSDL th√†nh c√¥ng!")

        try:
            cursor = self.conn.cursor()

            # üîπ L·∫•y t·ªïng ti·ªÅn t·ª´ UI v√† ki·ªÉm tra h·ª£p l·ªá
            total_text = self.ui.lineEdit_7.text().strip()

            if not total_text or not total_text.replace(".", "", 1).isdigit():
                QMessageBox.critical(self, "L·ªói", "‚ùå T·ªïng ti·ªÅn kh√¥ng h·ª£p l·ªá!")
                return

            total_price = float(total_text)  # Chuy·ªÉn sang ki·ªÉu float
            user_id = 1  # üìù Gi·∫£ ƒë·ªãnh user_id = 1 (ho·∫∑c thay b·∫±ng user th·ª±c t·∫ø)
            
            # üîπ L∆∞u h√≥a ƒë∆°n v√†o b·∫£ng `orders` (‚ùå Kh√¥ng l∆∞u v√†o `order_details` n·ªØa)
            cursor.execute("INSERT INTO orders (user_id, total_price, order_date) VALUES (%s, %s, NOW())",
                           (user_id, total_price))
            order_id = cursor.lastrowid  # L·∫•y `order_id` v·ª´a t·∫°o

            # Ki·ªÉm tra n·∫øu order_id kh√¥ng h·ª£p l·ªá
            if order_id is None:
                QMessageBox.critical(self, "L·ªói", "‚ùå Kh√¥ng th·ªÉ t·∫°o h√≥a ƒë∆°n!")
                return

            print(f"‚úÖ H√≥a ƒë∆°n m·ªõi ƒë√£ t·∫°o: Order ID = {order_id}")

            self.conn.commit()  # ‚úÖ L∆∞u v√†o CSDL

            # üéâ Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
            QMessageBox.information(self, "Th√†nh c√¥ng", "‚úÖ H√≥a ƒë∆°n ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o CSDL!")

        except pymysql.Error as e:
            self.conn.rollback()
            QMessageBox.critical(self, "L·ªói CSDL", f"‚ùå L·ªói khi l∆∞u h√≥a ƒë∆°n: {e}")
            print(f"‚ùå L·ªói khi l∆∞u  h√≥a ƒë∆°n: {e}")

        except Exception as ex:
            QMessageBox.critical(self.centralwidget, "L·ªói h·ªá th·ªëng", f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {ex}")
            print(f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {ex}")
            

    def hien_thi_ma_don_hang(self, order_id):
            try:
                cursor = self.conn.cursor()
                
                self.ui.lineEdit_3.setText(str(order_id))
                print(f"üîç Debug: M√£ ƒë∆°n h√†ng ƒë∆∞·ª£c ch·ªçn = {order_id}")
            
                self.ui.tableWidget.setRowCount(0)

                cursor.execute("""
                    SELECT p.name, od.quantity, od.price, (od.quantity * od.price) AS total_price
                    FROM order_details od
                    JOIN products p ON od.product_id = p.product_id
                    WHERE od.order_id = %s
                """, (order_id,))

                rows = cursor.fetchall()
                print(f"üìã Chi ti·∫øt ƒë∆°n h√†ng l·∫•y ƒë∆∞·ª£c: {rows}")

                if not rows:
                    QMessageBox.warning(self.ui, "L·ªói", f"‚ùå ƒê∆°n h√†ng {order_id} kh√¥ng c√≥ s·∫£n ph·∫©m n√†o!")
                    return

                for row_number, row_data in enumerate(rows):
                    self.ui.tableWidget.insertRow(row_number)
                    for column_number, data in enumerate(row_data):
                        self.ui.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(data)))

                print(f"‚úÖ ƒêang hi·ªÉn th·ªã {len(rows)} s·∫£n ph·∫©m trong ƒë∆°n h√†ng {order_id}")

                cursor.execute("SELECT total_price FROM orders WHERE order_id = %s", (order_id,))
                total_price = cursor.fetchone()
                total_price = total_price[0] if total_price else 0
                self.ui.lineEdit_7.setText(str(total_price))

                QMessageBox.information(self.ui, "Th√†nh c√¥ng", f"‚úÖ ƒê√£ t·∫£i ƒë∆°n h√†ng {order_id} th√†nh c√¥ng!")

            except pymysql.Error as e:
                QMessageBox.critical(self.ui, "L·ªói CSDL", f"‚ùå L·ªói khi t·∫£i ƒë∆°n h√†ng: {e}")
                print(f"‚ùå L·ªói khi t·∫£i ƒë∆°n h√†ng: {e}")
            except Exception as ex:
                QMessageBox.critical(self.ui, "L·ªói h·ªá th·ªëng", f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {ex}")
                print(f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {ex}")

    def ap_dung_khuyen_mai(self):
        ma_khuyen_mai = self.ui.lineEdit_2.text().strip()

        if not ma_khuyen_mai:
            QMessageBox.warning(self.ui, "L·ªói", "‚ùå Vui l√≤ng nh·∫≠p m√£ khuy·∫øn m√£i!")
            return

        if not self.conn or not self.conn.open:
            QMessageBox.critical(self.ui, "L·ªói CSDL", "‚ùå K·∫øt n·ªëi CSDL kh√¥ng kh·∫£ d·ª•ng!")
            return

        try:
            cursor = self.conn.cursor()
            cursor.execute("SELECT discount FROM promotions WHERE code = %s", (ma_khuyen_mai,))
            result = cursor.fetchone()

            if not result:
                QMessageBox.warning(self.ui, "L·ªói", "‚ùå M√£ khuy·∫øn m√£i kh√¥ng h·ª£p l·ªá!")
                return

            discount_value = result[0]
            if discount_value is None or discount_value <= 0:
                QMessageBox.warning(self.ui, "L·ªói", "‚ùå M√£ khuy·∫øn m√£i kh√¥ng h·ª£p l·ªá ho·∫∑c kh√¥ng c√≥ gi·∫£m gi√°!")
                return

            print(f"‚úÖ M√£ h·ª£p l·ªá! Gi·∫£m gi√°: {discount_value}")

            total_text = self.ui.lineEdit_7.text().strip()
            try:
                total_price = float(total_text.replace(",", ""))
            except ValueError:
                QMessageBox.critical(self.ui, "L·ªói", "‚ùå T·ªïng ti·ªÅn kh√¥ng h·ª£p l·ªá!")
                return

            total_price = max(0, total_price - discount_value)
            self.ui.lineEdit_7.setText(str(round(total_price, 2)))

            QMessageBox.information(self.ui, "Th√†nh c√¥ng", f"‚úÖ M√£ khuy·∫øn m√£i ƒë√£ √°p d·ª•ng! T·ªïng ti·ªÅn m·ªõi: {total_price}")

        except pymysql.Error as e:
            QMessageBox.critical(self.ui, "L·ªói CSDL", f"‚ùå L·ªói khi √°p d·ª•ng khuy·∫øn m√£i: {e}")
        except Exception as ex:
            QMessageBox.critical(self.ui, "L·ªói h·ªá th·ªëng", f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {ex}")

    def thanh_toan(self):
        """ L∆∞u h√≥a ƒë∆°n v√†o b·∫£ng orders tr∆∞·ªõc, r·ªìi m·ªõi th√™m v√†o order_details """

        if not self.conn or not self.conn.open:
            QMessageBox.critical(self, "L·ªói CSDL", "‚ùå K·∫øt n·ªëi CSDL kh√¥ng kh·∫£ d·ª•ng!")
            return

        try:
            cursor = self.conn.cursor()

            # üîπ Ki·ªÉm tra s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong tableWidget
            row_count = self.ui.tableWidget.rowCount()
            if row_count == 0:
                QMessageBox.warning(self, "C·∫£nh b√°o", "‚ö†Ô∏è Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë·ªÉ l∆∞u!")
                return

            # üîπ L·∫•y t·ªïng ti·ªÅn t·ª´ giao di·ªán
            total_text = self.ui.lineEdit_7.text().strip()
            if not total_text or not total_text.replace(".", "", 1).isdigit():
                QMessageBox.critical(self, "L·ªói", "‚ùå T·ªïng ti·ªÅn kh√¥ng h·ª£p l·ªá!")
                return

            total_price = float(total_text)
            user_id = 1  # üîπ Gi·∫£ s·ª≠ user_id c·ªë ƒë·ªãnh l√† 1, c√≥ th·ªÉ l·∫•y t·ª´ session ƒëƒÉng nh·∫≠p

            # üî• B∆∞·ªõc 1: Ch√®n v√†o b·∫£ng orders tr∆∞·ªõc
            cursor.execute(
                "INSERT INTO orders (user_id, total_price, order_date) VALUES (%s, %s, NOW())",
                (user_id, total_price)
            )
            order_id = cursor.lastrowid  # üîπ L·∫•y order_id v·ª´a t·∫°o
            if not order_id:
                QMessageBox.critical(self, "L·ªói", "‚ùå Kh√¥ng th·ªÉ t·∫°o h√≥a ƒë∆°n!")
                return

            print(f"‚úÖ H√≥a ƒë∆°n m·ªõi ƒë√£ t·∫°o: Order ID = {order_id}")

            # üî• B∆∞·ªõc 2: Ch√®n t·ª´ng s·∫£n ph·∫©m v√†o b·∫£ng order_details
            for row in range(row_count):
                product_id = self.ui.tableWidget.item(row, 0).text()  # üîπ C·ªôt 1: M√£ s·∫£n ph·∫©m
                quantity = self.ui.tableWidget.item(row, 2).text()  # üîπ C·ªôt 3: S·ªë l∆∞·ª£ng
                price = self.ui.tableWidget.item(row, 3).text()  # üîπ C·ªôt 4: ƒê∆°n gi√°
                total = self.ui.tableWidget.item(row, 4).text()  # üîπ C·ªôt 5: Th√†nh ti·ªÅn

                # Ki·ªÉm tra d·ªØ li·ªáu h·ª£p l·ªá
                if not product_id or not quantity or not price or not total:
                    continue  # üîπ B·ªè qua d√≤ng r·ªóng

                cursor.execute(
                    "INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (%s, %s, %s, %s)",
                    (order_id, product_id, quantity, price)
                )

            # üî• B∆∞·ªõc 3: X√°c nh·∫≠n l∆∞u d·ªØ li·ªáu
            self.conn.commit()
            QMessageBox.information(self, "Th√†nh c√¥ng", "‚úÖ H√≥a ƒë∆°n ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o CSDL!")

        except pymysql.Error as e:
            self.conn.rollback()
            QMessageBox.critical(self, "L·ªói CSDL", f"‚ùå L·ªói khi l∆∞u h√≥a ƒë∆°n: {e}")
            print(f"‚ùå L·ªói khi l∆∞u h√≥a ƒë∆°n: {e}")

        except Exception as ex:
            QMessageBox.critical(self, "L·ªói h·ªá th·ªëng", f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {ex}")
            print(f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {ex}")

    def dang_xuat(self):
        self.close()
        from dangnhap1 import DangNhap
        self.login_window = DangNhap()
        self.login_window.show()


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = TrangChu()
    window.show()
    sys.exit(app.exec())